# this is the kafka output config, so load the kafka output module
module(load="omkafka")

# load mmrm1stspace to remove leading space from msg field in output
# (leading space breaks existing grok/regex message filters)
module(load="mmrm1stspace")

# parse json messages when @cee cookie is found
module(load="mmjsonparse")

# define a template to be used by omkafka dynatopic
template(name="kafka_topic" type="string" string="rsyslog-%syslogseverity-text%")

# send to kafka if lookup table contains "kafka" for relevant programname
# $.log_outputs defined by lookup table in lookup_output.conf
if ( $.log_outputs contains "kafka" ) then {

    # remove leading white space from msg field
    action(type="mmrm1stspace")

    # try parsing the message as json if @cee cookie is found
    action(type="mmjsonparse" name="mmjsonparse_kafka")

    # the message is json, use a different template (syslog_cee vs syslog_json)
    # unfortunately rsyslog doesn't allow variables to be used as template
    # names, so the kafka action is duplicated here.
    if $parsesuccess == "OK" then {
        action(type="omkafka"
               broker=<%= scope.lookupvar('logging_kafka_brokers').to_json %>
               topic="kafka_topic"
               dynatopic="on"
               dynatopic.cachesize="1000"
               partitions.auto="on"
               template="syslog_cee"
               confParam=[ "compression.codec=snappy",
                           "socket.timeout.ms=10000",
                           "socket.keepalive.enable=true",
                           "queue.buffering.max.ms=50",
                           "batch.num.messages=1000" ]
        )
    } else {
        action(type="omkafka"
               broker=<%= scope.lookupvar('logging_kafka_brokers').to_json %>
               topic="kafka_topic"
               dynatopic="on"
               dynatopic.cachesize="1000"
               partitions.auto="on"
               template="syslog_json"
               confParam=[ "compression.codec=snappy",
                           "socket.timeout.ms=10000",
                           "socket.keepalive.enable=true",
                           "queue.buffering.max.ms=50",
                           "batch.num.messages=1000" ]
        )
    }

}
